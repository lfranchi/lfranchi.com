#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/stylesheet/' do
  # don’t filter or layout
end

compile /(rss|atom)/ do
  filter :haml, :format => :html5
  layout 'none'
end

compile '*' do
 # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  # puts "Compiling #{item[:title]} with ext: #{ext}"
  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext.nil?
    filter :haml, :format => :html5
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :kramdown
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end

    layout 'default'
end

route '/stylesheet/' do
  '/style.css'
end

route /^\/tags\/.+?-(atom|rss)/ do
  item.identifier.gsub(/(.+)-(rss|atom)\/$/, '\1/\2') + '.xml'
end

route '/(atom|rss)/' do
  item.identifier.chop + '.xml'
end

# Provide a better url/path for blog articles instead of articles/name.html
route '/articles/*' do
  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/
    .match(item.identifier).captures

  "/#{y}/#{m}/#{slug}/index.html"
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, { :format => :html5 }